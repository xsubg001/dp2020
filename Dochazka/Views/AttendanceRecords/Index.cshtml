@model PaginatedListViewModel<Dochazka.Models.AttendanceRecordModel>

@{
    bool managerControls = false;
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p class="text-info">@ViewBag.InfoMessage</p>

<form asp-controller="AttendanceRecords" asp-action="Index" method="get">
    <div class="row">
        @if (User.IsInRole("TeamAdministratorRole") || User.IsInRole("TeamManagerRole"))
        {
            managerControls = true;
            <div class="col-auto">
                Filter by Full Name: <input type="text" name="searchString" value=@ViewData["CurrentFilter"]>
            </div>
        }
        <div class="col-auto">
            Filter by Month: <input type="month" data-val="true" id="selectedMonth" name="selectedMonth" value="@ViewData["SelectedMonth"]">
            <input type="submit" value="Filter" />
            <a asp-action="Index">Reset Filter</a>
        </div>
    </div>
</form>

<br />
<p>
    <a asp-action="Create">Create a new attendance record</a>
    <br />
    <a asp-action="Index"
       asp-route-getAsCsv=true
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-selectedMonth="@ViewData["SelectedMonth"]"
       asp-route-pageNumber="@(Model.PageIndex)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Export attendance records as CSV file
    </a>
    <br />
    <a asp-action="PayrollSummary"
       asp-route-getAsCsv=false
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-selectedMonth="@ViewData["SelectedMonth"]"
       asp-route-pageNumber="@(Model.PageIndex)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        View and export payroll summary as CSV file
    </a>
</p>

<form asp-action="Index">
    @if (Model.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["DateSortParm"]"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-selectedMonth="@ViewData["SelectedMonth"]">
                            @Html.DisplayNameFor(model => model[0].WorkDay)
                        </a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].MorningAttendance)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].AfternoonAttendance)
                    </th>
                    <th>
                        <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["NameSortParm"]"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-selectedMonth="@ViewData["SelectedMonth"]">
                            @Html.DisplayNameFor(model => model[0].Employee.FullName)
                        </a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model[0].Employee.UserName)
                    </th>
                    <th>
                        <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["ApprovalStatusSortParm"]"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-selectedMonth="@ViewData["SelectedMonth"]">
                            @Html.DisplayNameFor(model => model[0].ManagerApprovalStatus)
                        </a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.WorkDay)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MorningAttendance)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AfternoonAttendance)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Employee.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Employee.UserName)
                        </td>
                        <td>
                            <div class="form-group">
                                <input type="hidden" name="WorkDays" value="@item.WorkDay" />
                                <input type="hidden" name="EmployeeIds" value="@item.EmployeeId" />
                                @{
                                    var user = await userManager.GetUserAsync(User);
                                    var currentUserId = user?.Id;
                                    if (await userManager.IsInRoleAsync(await userManager.FindByIdAsync(currentUserId), Roles.TeamAdministratorRole.ToString()) ||
                                    (await userManager.IsInRoleAsync(await userManager.FindByIdAsync(currentUserId), Roles.TeamManagerRole.ToString()) && item.Employee.Team.PrimaryManagerId == currentUserId))
                                    {
                                        <select name="ManagerApprovalStatuses"
                                            class="form-control"
                                            asp-for=@item.ManagerApprovalStatus
                                            asp-items="Html.GetEnumSelectList<ManagerApprovalStatus>()">
                                        </select>
                                    }
                                    else
                                    {
                                        <input type="hidden" name="ManagerApprovalStatuses" value="@item.ManagerApprovalStatus" />
                                        <select name="ManagerApprovalStatuses"
                                            disabled="disabled"
                                            class="form-control"
                                            asp-for=@item.ManagerApprovalStatus
                                            asp-items="Html.GetEnumSelectList<ManagerApprovalStatus>()">
                                        </select>
                                    }
                                }
                            </div>
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { item.EmployeeId, item.WorkDay }) |
                            @Html.ActionLink("Details", "Details", new { item.EmployeeId, item.WorkDay }) |
                            @Html.ActionLink("Delete", "Delete", new { item.EmployeeId, item.WorkDay })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <div class="row">
        <div class="col-auto mr-auto">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-selectedMonth="@ViewData["SelectedMonth"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>

            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-selectedMonth="@ViewData["SelectedMonth"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </div>
        <div class="col-auto">
            @if (managerControls)
            {
                <input type="submit" value="Update Approvals" class="btn btn-primary" style="width:auto"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-selectedMonth="@ViewData["SelectedMonth"]" />
            }
            <a asp-action="Index" class="btn btn-primary" style="width:auto">Cancel</a>
        </div>
    </div>
</form>

